plugins {
    id 'com.github.hierynomus.license' version '0.15.0'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'com.github.jonathanxd'
version '1.1.15-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'license'
apply plugin: 'com.github.johnrengelman.shadow'

license {
    header rootProject.file("LICENSE_HEADER")
}

defaultTasks 'licenseFormat', 'build', 'test', 'jar', 'shadowJar'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
    maven { url "https://hub.spigotmc.org/nexus/content/repositories/snapshots/" }
}

jar {
    from "$rootProject.rootDir/LICENSE"

    manifest {
        attributes 'Implementation-Title': baseName,
                'Implementation-Version': version
    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: classes) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives shadowJar
}

dependencies {
    implementation 'com.github.JonathanxD:KWCommands:1.6.23'
    implementation 'org.bukkit:bukkit:1.8-R0.1-SNAPSHOT'
    implementation "com.github.JonathanxD.JwIUtils:JwIUtils:4.17.2"
    implementation "com.github.JonathanxD.JwIUtils:jwiutils-kt:4.17.2"
    implementation "com.github.JonathanxD.JwIUtils:json-lang-loader:4.17.2"
    implementation "com.github.JonathanxD.JwIUtils:links:4.17.2"

    testImplementation group: 'junit', name: 'junit', version: '4.12'
}

shadowJar {
    dependencies {
        include(dependency("com.github.JonathanxD:JwIUtils"))
        include(dependency("com.github.JonathanxD.JwIUtils:JwIUtils"))
        include(dependency("com.github.JonathanxD.JwIUtils:jwiutils-kt"))
        include(dependency("com.github.JonathanxD.JwIUtils:specializations"))
        include(dependency("com.github.JonathanxD.JwIUtils:properties"))
        include(dependency("com.github.JonathanxD.JwIUtils:json-lang-loader"))
        include(dependency("com.github.JonathanxD:KWCommands"))

        // Kotlin
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib"))
        include(dependency("org.jetbrains.kotlin:kotlin-stdlib-jre8"))
        include(dependency("org.jetbrains.kotlin:kotlin-reflect"))

        include(dependency("com.googlecode.json-simple:json-simple"))
    }
}

license {
    ext.name = project.name
    ext.description = project.description
    ext.organization = project.organization
    ext.url = project.url
    ext.year = Calendar.getInstance().get(Calendar.YEAR)
    ext.email = project.email

    exclude "**/*.info"
    exclude "**/*.md"
    exclude "res/**"
    exclude "src/main/resources/**"
    exclude "src/test/resources/**"
    exclude "**/*.json"
    exclude "**/*.yml"
    exclude "**/*.lang"

    header rootProject.file('LICENSE_HEADER')

    sourceSets = project.sourceSets

    ignoreFailures false
    strictCheck true

    mapping {
        java = 'SLASHSTAR_STYLE'
    }
}
